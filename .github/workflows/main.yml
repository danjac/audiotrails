name: Listenwave Project CI/CD
on: [pull_request, push]
run-name: ${{ github.actor }} is running checks
env:
    REGISTRY: docker.io
    DOCKER_IMAGE: danjac2018/listenwave
jobs:
    precommit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.12.1"
                  cache: "pip"
            - uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
            # install eslint dependencies etc first
            - run: npm install
            - uses: pre-commit/action@v3.0.1
    unittests:
        needs: precommit
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:16
                env:
                    POSTGRES_PASSWORD: password
                ports: ["5432:5432"]
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.12.1"
                  cache: "pip"
            - run: pip install -r requirements-ci.txt
            - run: xargs python -m nltk.downloader < nltk.txt
            - run: python -m pytest
    docker:
        if: github.ref == 'refs/heads/main'
        needs: unittests
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
            - name: Check out repo
              uses: actions/checkout@v4
            - name: Log into Docker hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                  images: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE }}
            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              with:
                subject-name: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE }}
                subject-digest: ${{ steps.push.outputs.digest }}
                push-to-registry: true
    deploy:
        if: github.ref == 'refs/heads/main'
        needs: docker
        runs-on: ubuntu-latest
        steps:
            - name: Check out repo
              uses: actions/checkout@v4
            - name: Push to dokku
              uses: dokku/github-action@master
              with:
                git_remote_url: ${{ secrets.GIT_REMOTE_URL }} # 'ssh://dokku@dokku.me:22/appname'
                ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
