name: runtests

on:
    workflow_call:

jobs:
    tests:
        runs-on: ubuntu-latest
        env:
            DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/github_actions
            REDIS_URL: redis://localhost:4321
            SECRET_KEY: seekrit

        services:
            postgres:
                image: postgres:14.1
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: github_actions
                ports:
                    - 5432:5432
                # needed because the postgres container does not provide a healthcheck
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up Python 3.11
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11.0"

            - name: Install psycopg2 prerequisites
              run: sudo apt-get install libpq-dev

            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true

            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v2
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ steps.setup-python.outputs.python-version }}

            - name: Install dependencies from Poetry
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-root

            - name: Security checks
              run: |
                  source .venv/bin/activate
                  python -m bandit -r radiofeed -x="**/tests/**.*"

            - name: Check Django templates
              run: |
                  source .venv/bin/activate
                  python manage.py validate_templates

            - name: Run unit tests
              run: |
                  source .venv/bin/activate
                  xargs python -m nltk.downloader < nltk.txt
                  python -m pytest
