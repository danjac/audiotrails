version: '3.4'

x-env: &default-env
  DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
  REDIS_URL: redis://redis:6379/0
  EMAIL_HOST: mailhog
  EMAIL_PORT: 1025
  SECRET_KEY: seekrit
  #AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  #AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  #AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}

volumes:
  pg_data: {}

services:
  postgres:
    image: postgres:11.8
    environment:
      # for development only!
      - POSTGRES_PASSWORD=password
    volumes:
      - pg_data:/var/lib/postgresql/data
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '3'

  redis:
    image: redis:5.0.7
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '3'

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - '8025:8025'
      - '1025:1025'
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '3'

  assets: &assets
    build:
      context: .
      dockerfile: assets.dockerfile
    privileged: true
    volumes:
      - .:/app
      - /app/node_modules
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '3'

  watchjs:
    <<: *assets
    command: ['watchexec', '-w', 'static/src/js', '--', 'yarn', 'watch-js']

  watchcss:
    <<: *assets
    command: ['watchexec', '-w', 'static/src/css', '--', 'yarn', 'watch-css']

  django: &django
    build:
      context: .
      dockerfile: django.dockerfile
    restart: on-failure
    privileged: true
    environment: *default-env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    ports:
      - '80:8000'
    command: /start-django
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '3'

  celeryworker:
    <<: *django
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    ports: []
    command: /start-celerybeat
