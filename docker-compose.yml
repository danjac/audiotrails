version: '3.8'

x-env: &default-env
    DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
    EMAIL_HOST: mailhog
    EMAIL_PORT: 1025
    REDIS_URL: redis://redis:6379/0
    SECRET_KEY: seekrit!
    TWITTER_ACCOUNT: casts_j

services:
    postgres:
        image: postgres:11.8
        environment:
            - POSTGRES_PASSWORD=password
        volumes:
            - pg_data:/var/lib/postgresql/data
        stop_grace_period: '3s'
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'postgres']
            interval: 1s
            timeout: 3s
            retries: 30
        logging:
            driver: 'json-file'
            options:
                max-size: '100k'
                max-file: '3'

    redis:
        image: redis:6.2.2-buster
        stop_grace_period: '3s'
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 1s
            timeout: 3s
            retries: 30
        logging:
            driver: 'json-file'
            options:
                max-size: '100k'
                max-file: '3'

    mailhog:
        image: mailhog/mailhog:v1.0.0
        stop_grace_period: '3s'
        ports:
            - '8025:8025'
            - '1025:1025'
        logging:
            driver: 'json-file'
            options:
                max-size: '100k'
                max-file: '3'

    django: &django
        build:
            context: .
            target: django
        restart: on-failure
        privileged: true
        tty: true
        stop_grace_period: '3s'
        logging:
            driver: 'json-file'
            options:
                max-size: '100k'
                max-file: '3'
        environment: *default-env
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        volumes:
            - ./:/app

    webapp:
        <<: *django
        ports:
            - '8000:8000'
        command: /start-webapp

    worker:
        <<: *django
        command: /start-worker
        depends_on:
            - webapp

    watcher:
        build:
            context: .
            target: node
        command: ['npm', 'run', 'watch']
        volumes:
            - ./:/app
            - /app/node_modules

volumes:
    pg_data: {}
