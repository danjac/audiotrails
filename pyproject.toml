[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "radiofeed"
version = "0.1.0"
description = "Podcast aggregator"
authors = ["Dan Jacob <danjac2018@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
Django = "^5.1"
brotli = "^1.1.0"
dj-database-url = "^2.2.0"
django-allauth = {version = "^64.0.0", extras = ["socialaccount"]}
django-anymail = "^11.1"
django-click = "^2.4.0"
django-csp = "^3.8"
django-environ = "^0.11.2"
django-extensions = "^3.2.3"
django-fast-update = "^0.2.3"
django-health-check = "^3.18.3"
django-htmx = "^1.19.0"
django-model-utils = "^4.5.1"
django-permissions-policy = "^4.21.0"
django-redis = "^5.4.0"
django-version-checks = "^1.12.0"
gunicorn = "^22.0.0"
heroicons = {version = "^2.7.0", extras = ["django"]}
hiredis = "^3.0.0"
httpx = "^0.27.0"
ipython = "^8.26.0"
loguru = "^0.7.2"
lxml = "^5.2.2"
markdown-it-py = {version = "^3.0.0", extras = ["linkify"]}
nh3 = "^0.2.18"
nltk = "^3.8.2"
pillow = "^10.4.0"
psutil = "^6.0.0"
psycopg = {version = "^3.2.1", extras = ["binary"]}
psycopg-pool = "^3.2.2"
pydantic = "^2.8.2"
python-dateutil = "^2.9.0.post0"
redis = "^5.0.8"
scikit-learn = "^1.5.1"
scipy = "^1.14.0"
sentry-sdk = "^2.12.0"
setuptools = "^72.1.0"
whitenoise = {version = "^6.7.0", extras = ["brotli"]}
django-read-only = "^1.16.0"

[tool.poetry.group.dev.dependencies]
bandit = {version = "^1.7.9", extras = ["toml"]}
coverage = {version = "^7.6.1", extras = ["toml"]}
django-browser-reload = "^1.13.0"
django-debug-toolbar = "^4.4.6"
factory-boy = "^3.3.0"
mypy = "^1.11.1"
mypy-extensions = "^1.0.0"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-django = "^4.8.0"
pytest-env = "^1.1.3"
pytest-icdiff = "^0.9"
pytest-mock = "^3.14.0"
pytest-mypy = "^0.10.3"
pytest-randomly = "^3.15.0"
pytest-sugar = "^1.0.0"
pytest-xdist = "^3.6.1"
types-python-dateutil = "^2.9.0.20240316"
types-urllib3 = "^1.26.25.14"
werkzeug = "^3.0.3"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE="radiofeed.settings"
addopts = [
    "-v",
    "-x",
    "-p no:warnings",
    "--ff",
    "--mypy",
    "--cov",
    "--reuse-db",
    "--no-cov-on-fail",
    "--cov-fail-under=100",
    "--cov-report=term-missing",
    "--tb=short",
]
testpaths = "radiofeed"
env = [
    "COVERAGE_CORE=sysmon",
    "TEMPLATE_DEBUG=true",
    "USE_COLLECTSTATIC=false",
    "USE_CONNECTION_POOL=false",
    "USE_HTTPS=false",
]

[tool.coverage.run]
source=["radiofeed"]
omit=[
    "**/migrations/*",
    "*/nltk/*",
    "*/static/*",
    "*/tests/*",
    "*/settings.py",
    "*/wsgi.py",
]


[tool.mypy]
python_version = "3.12"
check_untyped_defs = false
ignore_missing_imports = true
show_error_codes = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = false
warn_redundant_casts = false
warn_unused_configs = false
warn_unreachable = true

[[tool.mypy.overrides]]
module="*.tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module="*.migrations.*"
ignore_errors = true

[tool.djlint]
profile = "django"
ignore = "H030,H031,H017,H021"

[tool.ruff]
target-version = "py312"

lint.select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "D10", # flake8-debugger
    "DJ", # flake8-django
    "E", # pycodestyle (error)
    "ERA", # eradicate
    "F", # pyflakes
    "FA", # flake8-future-annotations
    "FBT", # flake8-boolean-trap
    "G", # flake8-logging-format
    "I001", # isort
    "INP", # flake8-no-pep420
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "PGH", # pygrep hooks
    "PIE", # flake8-pie
    "PL", # pylint
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff-specific
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "W", # pycodestyle (warning)
]
lint.ignore = [
    "D100",
    "D104",
    "D106",
    "D107",
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "E501",
    "E701",
    "Q000",
    "S101",
]

[tool.ruff.lint.per-file-ignores]
"**/apps.py" = ["D101", "D102", "D103", "D105", "PL", "RUF"]
"**/conftest.py" = ["D101", "D102", "D103", "D105", "PL", "RUF"]
"**/migrations/**.py" = ["D101", "D102", "D103", "D105", "E501", "N", "PL", "RUF"]
"**/tests/**.py" = ["D101", "D102", "D103", "D105", "PL", "RUF"]

[tool.ruff.lint.isort]
known-first-party = ["radiofeed"]

[tool.pyright]
reportOptionalMemberAccess = false
reportGeneralTypeIssues = false
reportMissingTypeStubs = false
