# Generated by Django 5.0.4 on 2024-04-26 11:54

from django.db import migrations

_CATEGORIES = [
    "After Shows",
    "Alternative Health",
    "Animation & Manga",
    "Arts",
    "Astronomy",
    "Automotive",
    "Aviation",
    "Baseball",
    "Basketball",
    "Books",
    "Buddhism",
    "Business",
    "Business News",
    "Careers",
    "Chemistry",
    "Christianity",
    "Comedy",
    "Comedy Fiction",
    "Comedy Interviews",
    "Courses",
    "Crafts",
    "Cricket",
    "Daily News",
    "Design",
    "Documentary",
    "Drama",
    "Earth Sciences",
    "Education",
    "Education for Kids",
    "Entertainment News",
    "Entrepreneurship",
    "Fantasy Sports",
    "Fashion & Beauty",
    "Fiction",
    "Film History",
    "Film Interviews",
    "Film Reviews",
    "Fitness",
    "Food",
    "Football",
    "Games",
    "Golf",
    "Government",
    "Health & Fitness",
    "Hinduism",
    "History",
    "Hobbies",
    "Hockey",
    "Home & Garden",
    "How-To",
    "Improv",
    "Investing",
    "Islam",
    "Judaism",
    "Kids & Family",
    "Language Learning",
    "Leisure",
    "Life Sciences",
    "Management",
    "Marketing",
    "Mathematics",
    "Medicine",
    "Mental Health",
    "Music",
    "Music Commentary",
    "Music History",
    "Music Interviews",
    "Natural Sciences",
    "Nature",
    "News",
    "News Commentary",
    "Non-Profit",
    "Nutrition",
    "Parenting",
    "Performing Arts",
    "Personal Journals",
    "Pets & Animals",
    "Philosophy",
    "Physics",
    "Places & Travel",
    "Politics",
    "Relationships",
    "Religion",
    "Religion & Spirituality",
    "Rugby",
    "Running",
    "Science",
    "Science Fiction",
    "Self-Improvement",
    "Sexuality",
    "Soccer",
    "Social Sciences",
    "Society & Culture",
    "Spirituality",
    "Sports",
    "Sports News",
    "Stand Up",
    "Stories for Kids",
    "Swimming",
    "Tech News",
    "Technology",
    "Tennis",
    "True Crime",
    "TV & Film",
    "TV Reviews",
    "Video Games",
    "Visual Arts",
    "Volleyball",
    "Wilderness",
    "Wrestling",
]


def _add_categories(apps, schema_editor):
    Category = apps.get_model("podcasts.Category")
    categories = [Category(name=name) for name in _CATEGORIES]
    Category.objects.bulk_create(categories, ignore_conflicts=True)


class Migration(migrations.Migration):
    dependencies = [
        ("podcasts", "0002_add_podcast_search_trigger"),
    ]

    operations = [
        migrations.RunPython(_add_categories, reverse_code=migrations.RunPython.noop)
    ]
