# Generated by Django 4.2.7 on 2023-11-01 18:03

import datetime

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="podcasts.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "categories",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Podcast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rss", models.URLField(max_length=500, unique=True)),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Inactive podcasts will no longer be updated from their RSS feeds.",
                    ),
                ),
                (
                    "private",
                    models.BooleanField(
                        default=False, help_text="Only available to subscribers"
                    ),
                ),
                ("etag", models.TextField(blank=True)),
                ("title", models.TextField(blank=True)),
                ("pub_date", models.DateTimeField(blank=True, null=True)),
                ("parsed", models.DateTimeField(blank=True, null=True)),
                (
                    "parser_error",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("duplicate", "Duplicate"),
                            ("inaccessible", "Inaccessible"),
                            ("invalid_data", "Invalid Data"),
                            ("invalid_rss", "Invalid RSS"),
                            ("not_modified", "Not Modified"),
                            ("unavailable", "Unavailable"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("frequency", models.DurationField(default=datetime.timedelta(days=1))),
                ("modified", models.DateTimeField(blank=True, null=True)),
                (
                    "content_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                ("num_retries", models.PositiveSmallIntegerField(default=0)),
                ("cover_url", models.URLField(blank=True, max_length=2083, null=True)),
                (
                    "funding_url",
                    models.URLField(blank=True, max_length=2083, null=True),
                ),
                ("funding_text", models.TextField(blank=True)),
                (
                    "language",
                    models.CharField(
                        default="en",
                        max_length=2,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("website", models.URLField(blank=True, max_length=2083, null=True)),
                ("keywords", models.TextField(blank=True)),
                ("extracted_text", models.TextField(blank=True)),
                ("owner", models.TextField(blank=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Podcast Updated in Database"
                    ),
                ),
                ("explicit", models.BooleanField(default=False)),
                ("promoted", models.BooleanField(default=False)),
                (
                    "search_vector",
                    django.contrib.postgres.search.SearchVectorField(
                        editable=False, null=True
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="podcasts", to="podcasts.category"
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recommended_podcasts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frequency", models.PositiveIntegerField(default=0)),
                (
                    "similarity",
                    models.DecimalField(
                        blank=True, decimal_places=10, max_digits=100, null=True
                    ),
                ),
                (
                    "podcast",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to="podcasts.podcast",
                    ),
                ),
                (
                    "recommended",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="similar",
                        to="podcasts.podcast",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "podcast",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="podcasts.podcast",
                    ),
                ),
                (
                    "subscriber",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["-created"], name="podcasts_su_created_55323d_idx"
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="subscription",
            constraint=models.UniqueConstraint(
                fields=("subscriber", "podcast"),
                name="unique_podcasts_subscription_user_podcast",
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["podcast"], name="podcasts_re_podcast_10c46d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["recommended"], name="podcasts_re_recomme_244ce9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recommendation",
            index=models.Index(
                fields=["-similarity", "-frequency"],
                name="podcasts_re_similar_3e4170_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="recommendation",
            constraint=models.UniqueConstraint(
                fields=("podcast", "recommended"), name="unique_podcasts_recommendation"
            ),
        ),
        migrations.AddIndex(
            model_name="podcast",
            index=models.Index(
                fields=["-pub_date"], name="podcasts_po_pub_dat_850a22_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="podcast",
            index=models.Index(
                fields=["pub_date"], name="podcasts_po_pub_dat_2e433a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="podcast",
            index=models.Index(
                fields=["promoted"], name="podcasts_po_promote_fdc955_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="podcast",
            index=models.Index(
                fields=["content_hash"], name="podcasts_po_content_736948_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="podcast",
            index=models.Index(
                django.db.models.functions.text.Lower("title"),
                name="podcasts_podcast_lwr_title_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="podcast",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="podcasts_po_search__4c951f_gin"
            ),
        ),
    ]
