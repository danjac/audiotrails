# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.1.0
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: '2021-04-25T12:15:59Z'
  labels:
    app: audiopod
  name: audiopod
spec:
  securityContext:
    allowPrivilegeEscalation: true
    capabilities:
      drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    privileged: false
    readOnlyRootFilesystem: false
    seLinuxOptions: {}
    runAsGroup: 1000
    runAsUser: 1000
  containers:
    - args:
        - /start-watchcss
      command:
        - /entrypoint
      envFrom:
        - configMapRef:
            name: audiopod-configmap
      image: localhost/audiotrails:latest
      name: watchcss
      resources: {}
      volumeMounts:
        - mountPath: /app
          name: audiotrails-host
      workingDir: /app
    - args:
        - /start-celeryworker
      command:
        - /entrypoint
      envFrom:
        - configMapRef:
            name: audiopod-configmap
      image: localhost/audiotrails:latest
      name: celeryworker
      resources: {}
      volumeMounts:
        - mountPath: /app
          name: audiotrails-host
      workingDir: /app
    - command:
        - MailHog
      image: docker.io/mailhog/mailhog:v1.0.0
      name: mailhog
      ports:
        - containerPort: 8025
          hostPort: 8025
          protocol: TCP
        - containerPort: 1025
          hostPort: 42811
          protocol: TCP
      resources: {}
      workingDir: /home/mailhog
    - args:
        - redis-server
      command:
        - docker-entrypoint.sh
      image: docker.io/library/redis:latest
      name: redis
      ports:
        - containerPort: 6379
          hostPort: 40495
          protocol: TCP
      resources: {}
      workingDir: /data
    - args:
        - /start-watchjs
      command:
        - /entrypoint
      envFrom:
        - configMapRef:
            name: audiopod-configmap
      image: localhost/audiotrails:latest
      name: watchjs
      resources: {}
      volumeMounts:
        - mountPath: /app
          name: audiotrails-host
      workingDir: /app
    - args:
        - /start-celerybeat
      command:
        - /entrypoint
      envFrom:
        - configMapRef:
            name: audiopod-configmap
      image: localhost/audiotrails:latest
      name: celerybeat
      resources: {}
      volumeMounts:
        - mountPath: /app
          name: audiotrails-host
      workingDir: /app
    - args:
        - postgres
      command:
        - docker-entrypoint.sh
      env:
        - name: LANG
          value: en_US.utf8
        - name: PGDATA
          value: /var/lib/postgresql/data
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: PG_MAJOR
          value: '11'
        - name: PG_VERSION
          value: 11.8-1.pgdg90+1
      image: docker.io/library/postgres:11.8
      name: postgresql
      ports:
        - containerPort: 5432
          hostPort: 37647
          protocol: TCP
      resources: {}
      volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: audiotrails-db-host
      workingDir: /
    - args:
        - /start-django
      command:
        - /entrypoint
      envFrom:
        - configMapRef:
            name: audiopod-configmap
      image: localhost/audiotrails:latest
      name: webapp
      ports:
        - containerPort: 8000
          hostPort: 8000
          protocol: TCP
      resources: {}
      volumeMounts:
        - mountPath: /app
          name: audiotrails-host
      workingDir: /app
  dnsConfig: {}
  restartPolicy: Never
  volumes:
    - hostPath:
        path: .
        type: Directory
      name: audiotrails-host
    - hostPath:
        path: ./db
        type: DirectoryOrCreate
      name: audiotrails-db-host
status: {}
