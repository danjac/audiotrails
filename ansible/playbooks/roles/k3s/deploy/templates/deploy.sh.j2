#!/usr/bin/env bash

set -o errexit

export KUBECONFIG="{{ kubeconfig }}"

export IMAGE="{{ docker_image.split(":")[0] }}:$TAG"
export RELEASE_JOB_NAME="django-release-job-$TAG"

echo "Deploying image $IMAGE"

echo "Running migrations..."

# Create new release job
release_job_yaml=$(cat <<EOF
apiVersion: batch/v1
kind: Job
metadata:
  name: $RELEASE_JOB_NAME
spec:
  template:
    spec:
      containers:
        - name: django
          image: $IMAGE
          command: ["/bin/sh", "-c"]
          args: ["./release.sh"]
          envFrom:
            - configMapRef:
                name: django-config
            - secretRef:
                name: django-secret
      restartPolicy: OnFailure

EOF
)

# Pass the resulting YAML content to kubectl apply
echo "$release_job_yaml" | kubectl apply -f - -n default

kubectl wait --for=condition=complete job/$RELEASE_JOB_NAME --timeout=60s

# Delete the job after it has completed
kubectl delete pod -l job-name=$RELEASE_JOB_NAME
kubectl delete job $RELEASE_JOB_NAME

echo "Starting deployment..."

kubectl set image deployment/django-app django=$IMAGE -n default

echo "Updating cron jobs..."

{% for cronjob in cronjobs %}
kubectl set image cronjob/{{ cronjob.name }} django=${IMAGE} -n default
{% endfor %}
