- name: Install dependencies required for K3s
  apt:
      name:
          - apt-transport-https
          - curl
          - ca-certificates
      state: present
      update_cache: true

- name: Copy /etc/resolv.conf
  ansible.builtin.copy:
      src: resolv.conf
      dest: /etc/resolve.conf

- name: Download and install K3s on server
  shell: |
      curl -sfL https://get.k3s.io | sh -s - \
      --node-ip={{ private_ip }} \
      --advertise-address={{ private_ip }} \
      --tls-san={{ private_ip }}
  when: "'server' in group_names"

- name: Get the K3s join token from the control plane (for worker nodes)
  shell: k3s token create
  register: k3s_token
  delegate_to: "{{ inventory_hostname }}"
  run_once: true
  when: "'server' in group_names"

- name: Set K3s join token as a fact
  set_fact:
      k3s_token: "{{ k3s_token.stdout }}"
  run_once: true
  when: "'server' in group_names"

- name: Check if the K3s token is set
  debug:
      var: k3s_token
  when: "'agents' in group_names"

- name: Download and install K3s as a worker node
  vars:
      private_ip: "{{ hostvars[groups['server'][0]].private_ip }}"
  shell: |
      curl -sfL https://get.k3s.io | K3S_TOKEN={{ k3s_token }} sh -s - agent \
      --server https://{{ private_ip }}:6443
  when: "'agents' in group_names"

- name: Create .kube dir for user
  ansible.builtin.file:
      path: /home/{{ deploy_user }}/.kube
      state: directory
      owner: "{{ deploy_user }}"
      group: "{{ deploy_user }}"
      mode: 0700
  when: "'server' in group_names"

- name: Copy kubeconfig to user home dir
  ansible.builtin.copy:
      src: /etc/rancher/k3s/k3s.yaml
      dest: /home/{{ deploy_user }}/.kube/config
      remote_src: true
      owner: "{{ deploy_user }}"
      group: "{{ deploy_user }}"
      mode: "u+rw"
  when: "'server' in group_names"
