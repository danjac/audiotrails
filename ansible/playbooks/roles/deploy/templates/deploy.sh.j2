#!/usr/bin/env bash

set -o errexit

export IMAGE="{{ docker_image.split(":")[0] }}:$TAG"
export KUBECONFIG="$HOME/.kube/config"

echo "Deploying image $IMAGE"

echo "Running migrations..."

# Delete the existing job if it exists
kubectl delete job django-release-job -n default --ignore-not-found=true

# Create new release job
cat <<EOF > /tmp/django-release-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: django-release-job
spec:
  template:
    spec:
      containers:
        - name: django
          image: $IMAGE
          command: ["/bin/sh", "-c"]
          args: ["./release.sh"]
          envFrom:
            - configMapRef:
                name: django-config
            - secretRef:
                name: django-secret
      restartPolicy: OnFailure
EOF

# Apply the modified YAML to create the new job
kubectl apply -f /tmp/django-release-job.yaml -n default

kubectl wait --for=condition=complete job/django-release-job --timeout=60s

echo "Starting deployment..."

kubectl set image deployment/django-app django=$IMAGE -n default

echo "Updating cron jobs..."

{% for cronjob in cronjobs %}
kubectl set image cronjob/{{ cronjob.name }} {{ cronjob.name }}=${IMAGE} -n default
{% endfor %}
