- name: Deploy docker compose
  ansible.builtin.include_role:
      name: compose
- name: Add manage script
  ansible.builtin.template:
    src: templates/manage.sh.j2
    dest: "/home/{{ user }}/manage.sh"
    mode: "u+x,g+x"
- name: Copy Docker swarm config file
  ansible.builtin.template:
    src: templates/stack.yml.j2
    dest: "{{ project_dir }}/stack.yml"
    mode: "u+rw,g+rw"
- name: Add deploy script
  ansible.builtin.template:
    src: templates/deploy.sh.j2
    dest: "/home/{{ user }}/deploy.sh"
    mode: "u+x,g+x"
- name: Run systems checks and migrations
  changed_when: true
  ansible.builtin.shell:
      cmd: ./deploy.sh
- name: Initialize Docker swarm
  community.docker.docker_swarm:
      state: present
  register: swarm
- name: Add nodes
  community.general.docker_swarm:
    state: join
    advertise_addr: "{{ swarm_manager }}"
    join_token: "{{ swarm.swarm_facts.JoinTokens.Worker }}"
    remote_addrs: "{{ groups['app_servers']|list }}"
- name: Deploy stack
  ansible.builtin.shell:
    cmd: docker stack deploy -c {{ project_dir }}/stack.yml app
- name: Create log directory
  ansible.builtin.file:
      path: "{{ project_dir }}/logs"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: "u+rw"
- name: Create log files
  ansible.builtin.file:
      path: "{{ project_dir }}/logs/{{ item }}"
      state: touch
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: "0666"
  loop:
      - feedparser.log
      - recommendations.log
      - emails.log
      - clearsessions.log
- name: Set up logrotate for cron logs
  remote_user: root
  ansible.builtin.template:
      src: templates/logrotate.conf.j2
      dest: /etc/logrotate.d/{{ item }}
      mode: "0644"
  loop:
      - feedparser
      - recommendations
      - emails
      - clearsessions
- name: Install crontab
  vars:
      manage_cmd: "./manage.sh"
      logs_dir: "{{ project_dir }}/logs/"
  block:
      - name: Install parse feeds cron
        ansible.builtin.cron:
            name: Parse feeds
            user: "{{ user }}"
            minute: "*/6"
            job: "{{ manage_cmd }} parse_feeds --limit=360 >> {{ logs_dir }}feedparser.log 2>&1"
      - name: Install create recommendations cron
        ansible.builtin.cron:
            name: Create recommendations
            user: "{{ user }}"
            minute: "20"
            hour: "6"
            job: "{{ manage_cmd }} recommender create >> {{ logs_dir }}recommendations.log 2>&1"
      - name: Install send recommendations emails cron
        ansible.builtin.cron:
            name: Send recommendations emails
            user: "{{ user }}"
            minute: "45"
            hour: "12"
            weekday: "1"
            job: "{{ manage_cmd }} recommender send >> {{ logs_dir }}emails.log 2>&1"
      - name: Install clear Django sessions cron
        ansible.builtin.cron:
            name: Clear Django sessions
            user: "{{ user }}"
            minute: "5"
            hour: "6"
            job: "{{ manage_cmd }} clearsessions >> {{ logs_dir }}clearsessions.log 2>&1"
